{"entries":[{"timestamp":1740345638571,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"http"],[-1,"s"],[0,"://"],[-1,"developers.google.com/blockly/xml\"><variables></variables>"],[1,"www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n"],[0,"</xm"]],"start1":12,"start2":12,"length1":70,"length2":113}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"//% color=\"#EEAA00\" icon=\"\\uf09c\"\r\n//% block=\"ET: Gate\"\r\n//% block.loc.nl=\"ET: Gate\"\r\nnamespace EtGate {\r\n    let MODULE = \"EtGate\"\r\n\r\n    let GATE = false\r\n    let SWITCH1 = false\r\n    let SWITCH2 = false\r\n\r\n    export enum State {\r\n        //% block=\"opens\"\r\n        //% block.loc.nl=\"opent\"\r\n        Opens,\r\n        //% block=\"closes\"\r\n        //% block.loc.nl=\"sluit\"\r\n        Closes\r\n    }\r\n    let EventGateOpens: EtCommon.eventHandler\r\n    let EventGateCloses: EtCommon.eventHandler\r\n    let EventSwitch1Opens: EtCommon.eventHandler\r\n    let EventSwitch1Closes: EtCommon.eventHandler\r\n    let EventSwitch2Opens: EtCommon.eventHandler\r\n    let EventSwitch2Closes: EtCommon.eventHandler\r\n\r\n    export function onEventGateOpens(id: string, value: string) {\r\n        GATE = false\r\n        if (EventGateOpens) {\r\n            EventGateOpens(id)\r\n        }\r\n    }\r\n\r\n    export function onEventGateCloses(id: string, value: string) {\r\n        GATE = true\r\n        if (EventGateCloses) {\r\n            EventGateCloses(id)\r\n        }\r\n    }\r\n\r\n    export function onEventSwitch1Opens(id: string, value: string) {\r\n        SWITCH1 = false\r\n        if (EventSwitch1Opens) {\r\n            EventSwitch1Opens(id)\r\n        }\r\n    }\r\n\r\n    export function onEventSwitch1Closes(id: string, value: string) {\r\n        SWITCH1 = true\r\n        if (EventSwitch1Closes) {\r\n            EventSwitch1Closes(id)\r\n        }\r\n    }\r\n\r\n    export function onEventSwitch2Opens(id: string, value: string) {\r\n        SWITCH2 = false\r\n        if (EventSwitch2Opens) {\r\n            EventSwitch2Opens(id)\r\n        }\r\n    }\r\n\r\n    export function onEventSwitch2Closes(id: string, value: string) {\r\n        SWITCH2 = true\r\n        if (EventSwitch2Closes) {\r\n            EventSwitch2Closes(id)\r\n        }\r\n    }\r\n\r\n    //% block=\"ID\"\r\n    //% block.loc.nl=\"ID\"\r\n    export function id(): string {\r\n        return MODULE\r\n    }\r\n\r\n    //% block=\"set module id to %id\"\r\n    //% block.loc.nl=\"stel de module id in op %id\"\r\n    //% id.defl=\"EtGate\"\r\n    export function setModuleId(id: string) {\r\n        MODULE = id\r\n    }\r\n\r\n    //% block=\"switch 2 of %id is pressed\"\r\n    //% block.loc.nl=\"schakelaar 2 van %id is ingedrukt\"\r\n    //% id.defl=\"EtGate\"\r\n    export function askSwitch2(id: string): boolean {\r\n        return SWITCH2\r\n    }\r\n\r\n    //% block=\"switch 1 of %id is pressed\"\r\n    //% block.loc.nl=\"schakelaar 1 van %id is ingedrukt\"\r\n    //% id.defl=\"EtGate\"\r\n    export function askSwitch1(id: string): boolean {\r\n        return SWITCH1\r\n    }\r\n\r\n    //% block=\"the gate of %id is pressed\"\r\n    //% block.loc.nl=\"de poort van %id is ingedrukt\"\r\n    //% id.defl=\"EtGate\"\r\n    export function askGate(id: string): boolean {\r\n        return GATE\r\n    }\r\n\r\n    //% block=\"when switch 2 of %id %state\"\r\n    //% block.loc.nl=\"wanneer schakelaar 2 van %id %state\"\r\n    //% id.defl=\"EtGate\"\r\n    export function onSwitch2(id: string, state: State, programmableCode: () => void): void {\r\n        if (state == State.Opens) {\r\n            EtCommon.events.register(id, \"sw2opens\", onEventSwitch2Opens)\r\n            EventSwitch2Opens = programmableCode\r\n        }\r\n        else {\r\n            EtCommon.events.register(id, \"sw2closes\", onEventSwitch2Closes)\r\n            EventSwitch2Closes = programmableCode\r\n        }\r\n    }\r\n\r\n    //% block=\"when switch 1 of %id %state\"\r\n    //% block.loc.nl=\"wanneer schakelaar 1 van %id %state\"\r\n    //% id.defl=\"EtGate\"\r\n    export function onSwitch1(id: string, state: State, programmableCode: () => void): void {\r\n        if (state == State.Opens) {\r\n            EtCommon.events.register(id, \"sw1opens\", onEventSwitch1Opens)\r\n            EventSwitch1Opens = programmableCode\r\n        }\r\n        else {\r\n            EtCommon.events.register(id, \"sw1closes\", onEventSwitch1Closes)\r\n            EventSwitch1Closes = programmableCode\r\n        }\r\n    }\r\n\r\n    //% block=\"when the gate of %id %state\"\r\n    //% block.loc.nl=\"wanneer de poort van %id %state\"\r\n    //% id.defl=\"EtGate\"\r\n    export function onGate(id: string, state: State, programmableCode: () => void): void {\r\n        if (state == State.Opens) {\r\n            EtCommon.events.register(id, \"gateopens\", onEventGateOpens)\r\n            EventGateOpens = programmableCode\r\n        }\r\n        else {\r\n            EtCommon.events.register(id, \"gatecloses\", onEventGateCloses)\r\n            EventGateCloses = programmableCode\r\n        }\r\n    }\r\n\r\n}\r"],[0,"\n"]],"start1":0,"start2":0,"length1":4402,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," \"*\""],[-1,",\n        \"pxt-common\": \"github:ETmodules/pxt-common#dc97488c8f57b30547616f6fb168c5395eae1ab7\""],[0,"\n"],[1,""],[0,"    "]],"start1":135,"start2":135,"length1":103,"length2":9},{"diffs":[[0,"   \""],[-1,"testFiles\": [\n        \"test.ts\"\n    ],\n    \"preferredEditor\": \"tsprj\""],[1,"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":232,"start2":232,"length1":76,"length2":31}]},{"type":"added","filename":"test.ts","value":"// tests gaan hier; deze zal niet worden gecompileerd wanneer dit pakket wordt gebruikt als extensie.\n"}]}],"snapshots":[{"timestamp":1740345638570,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"pxt-gate\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}}],"shares":[],"lastSaveTime":1740345753406}